#############################################################
# Copyright (C) 2004 VeriSign, Inc.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.� See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA� 02111-1307� USA
# 
# http://www.verisign.com/nds/naming/rootzone/techdocs.html
#############################################################
# epp.config is a configuration file used by both the sample EPP Client
# (com.verisign.epp.interfaces.EPPApplicationSingleTst) and the sample
# EPP Server (com.verisign.epp.serverstub.Server).  Some of the
# settings a generic and some settings or specific to either the
# sample EPP Client or the sample EPP Server.
##############################################################################


############################################################
# Log Configuration Mode.  The mode controls the
# way by which the logging facility (Log4J) is initialized.
# There are three different modes:
#
# 	BASIC - Initialize logging using EPP.LogLevel
#           and EPP.LogFile
#   CFGFILE - Initialize logging using EPP.LogCfgFile and
#             optionally EPP.LogCfgFileWatch
#   CUSTOM	- SDK will not initialize the logging facility
#             and it is left up to the client application.
#
# The Server Stub does not consult EPP.LogMode, and will
# initialize its logging facility based on the following:
#    If EPP.LogCfgfile is defined
#       Use EPP.LogCfgFile and use EPP.LogCfgFileWatch if
#       defined
#    Else if EPP.LogFile and EPP.LogLevel is defined
#       Use EPP.LogFile and use EPP.LogLevel
#    Else
#       Print error and stop program.
############################################################
EPP.LogMode = BASIC


############################################################
# Log4J Log Level.  The root category will be set to
# on of the following priorities in order of severity:
# 	DEBUG
# 	INFO
# 	WARN
# 	ERROR
# 	FATAL
# ############################################################
EPP.LogLevel = INFO

############################################################
# Log4J Log File Name.  Logs will be appended to
# the log file.
############################################################
EPP.LogFile  = epp.log

############################################################
# Log4J XML configuration file used to defined the log 
# levels and the appenders (file, syslog, etc.).
############################################################
#EPP.LogCfgFile = logconfig.xml


############################################################
# Interval in milliseconds to monitor for changes to 
# EPP.LogCfgFile.  If EPP.LogCfgFile is updated, the 
# log settings will be re-loaded.
############################################################
EPP.LogCfgFileWatch = 5000


############################################################
# Connection and read timeout in milliseconds.
# A setting of 0 indiciates no timeout.  This setting
# applies to both the client and the server.
############################################################
EPP.ConTimeOut = 50000


############################################################
# Concrete client socket class.  Possible settings include:                                                                                                                         
#
# 	com.verisign.epp.transport.client.EPPPlainClientSocket
#		Plain TCP/IP socket connection(s)
#
#	com.verisign.epp.transport.client.EPPSSLClientSocket
#		SSL TCP/IP socket connection(s).
############################################################
#EPP.ClientSocketName = com.verisign.epp.transport.client.EPPPlainClientSocket
EPP.ClientSocketName = com.verisign.epp.transport.client.EPPSSLClientSocket

############################################################
# Host name or URL to connect to.  When using TCP, 
# EPP.ServerName can be a host name or an IP address.  When
# using HTTP, the value should be the full URL of the 
# service.  
############################################################
# TCP or SSL Stub Server
#EPP.ServerName= epp-ote.verisign-grs.com
#EPP.ServerName=64.34.174.8
EPP.ServerName=72.13.44.29
#EPP.ServerName=localhost
# Name Store OT&E
#EPP.ServerName=otessl.verisign-grs.com
# Name Store Production 
#EPP.ServerName=namestoressl.verisign-grs.com
# SRS (COM/NET) OT&E
#EPP.ServerName=epp-ote.verisign-grs.com
# SRS (COM/NET) Production
#EPP.ServerName=epp.verisign-grs.net


############################################################
# Port that the server will liston on and the client will
# connect to.  This is only used for TCP.
############################################################
# Stub Server port
#EPP.ServerPort=7000
# OT&E or Production port
EPP.ServerPort=700

############################################################
# Host name or IP Address that the client will connect from.
# If not defined the client host will default to the 
# loopback address.
############################################################
#x`EPP.ClientHost  = 192.0.35.211

############################################################
# Concrete server socket class.  Possible settings include:
#
# 	com.verisign.epp.transport.client.EPPPlainServer
#		Plain TCP/IP socket connection(s)
#
#	com.verisign.epp.transport.client.EPPSSLServer
#		SSL TCP/IP socket connection(s).
############################################################
#EPP.ServerSocketName = com.verisign.epp.transport.server.EPPPlainServer
EPP.ServerSocketName = com.verisign.epp.transport.server.EPPSSLServer


############################################################
# List of fully qualified EPP Mapping Factory class names.  There
# is one EPP Mapping Factory per EPP Command Mapping defined
# in the EPP Codec package (com.verisign.epp.codec).
############################################################
EPP.MapFactories = \
	com.verisign.epp.codec.change.EPPChangeMapFactory \
	com.verisign.epp.codec.domain.EPPDomainMapFactory \
	com.verisign.epp.codec.host.EPPHostMapFactory

EPP.ProtocolExtensions=

EPP.CmdRspExtensions= \
	com.verisign.epp.codec.changeext.EPPChangeExtFactory \
	com.verisign.epp.codec.idnext.EPPIdnExtFactory
	


############################################################
# List of fully qualified EPP Event Handler class names.  There
# is one EPP Event Handler per EPP Command Mapping defined
# in the EPP Codec package (com.verisign.epp.codec).
############################################################
EPP.ServerEventHandlers = \
	com.verisign.epp.serverstub.GenHandler \
	com.verisign.epp.serverstub.RZChangeHandler \
	com.verisign.epp.serverstub.RZChangeHandler \
	com.verisign.epp.serverstub.HostHandler
	

############################################################
# List of fully qualified EPP Poll Handler class names.  There
# is one EPP Poll Handler per EPP Command Mapping defined
# in the EPP Codec package (com.verisign.epp.codec) that
# supports Poll messages.
############################################################
EPP.PollDataSource=com.verisign.epp.serverstub.PollDataSource
EPP.PollHandlers= \
	com.verisign.epp.serverstub.DomainPollHandler

############################################################
# Fully qualified EPP Assembler name.  This is optional and
# is provided for overrididing the default which is
# com.verisign.epp.framework.EPPXMLAssembler
############################################################
#EPP.ServerAssembler=com.verisign.epp.framework.HttpEPPXMLAssembler

###########################################################
# SSL Protocol.  One of the following values is supported:
#
# SSL Supports some version of SSL
# SSLv2 Supports SSL version 2 or higher
# SSLv3 Supports SSL version 3
# TLS Supports some version of TLS
# TLSv1 Supports TLS version 1
###########################################################
EPP.SSLProtocol=TLS

###########################################################
# SSL Enabled Protocols.  If not defined, the default 
# for the provider will be used.  If defined, the 
# list of enabled protocols should be provided using 
# spaces as delimeters.  Examples of protocols 
# include:
#
# SSL Supports some version of SSL
# SSLv2 Supports SSL version 2 or higher
# SSLv3 Supports SSL version 3
# TLS Supports some version of TLS
# TLSv1 Supports TLS version 1
###########################################################
EPP.SSLEnabledProtocols=TLSv1 SSLv3

###########################################################
# SSL Enabled Cipher Suites. Space delimeted list of cipher 
# suites.  
# Examples include: 
# SSL_RSA_WITH_RC4_128_MD5 SSL_RSA_WITH_RC4_128_SHA
###########################################################
#EPP.SSLEnabledCipherSuites=

###########################################################
# SSL key algorithm.  SunX509 is the most common value.
###########################################################
EPP.SSLKeyManager=SunX509

###########################################################
# SSL Keystore file type.  JKS is the most common value.
###########################################################
EPP.SSLKeyStore=JKS

###########################################################
# SSL identity keystore file name.  
###########################################################
EPP.SSLKeyFileName=eppclient.jks

###########################################################
# SSL passphrases.  EPP.SSLPassPhrase is required 
# and is needed to open the keystore file.  
# EPP.SSLKeyPassPhrase is optional, is used to 
# access the private key of the keystore file when 
# the keystore file passphrase is different from the 
# private key passphrase.  If EPP.SSLKeyPassPhrase is 
# not defined, EPP.SSLPassPhrase is used for both 
# passphrases.
###########################################################
EPP.SSLPassPhrase=rzmepp
#EPP.SSLKeyPassPhrase=

###########################################################
# Optional trust file store properties.  If 
# EPP.SSLTrustStoreFileName is not defined, the 
# JRE trust store will be used.  If EPP.SSLTrustFileName
# is specified, than the file must exist and the 
# EPP.SSLTrustStorePassPhrase must be defined.
###########################################################
#EPP.SSLTrustStoreFileName=conf/keystore/eppclient.jks
#EPP.SSLTrustStorePassPhrase=rzmepp


###########################################################
# Sets the SSL debug system property, which can 
# be either "none" for no debug or "all" for 
# all debug.
###########################################################
javax.net.debug=all
#javax.net.debug=none



##########################################################
# PoolMan - Generic Pool Manager
#
# Client default options
#
# initialObjects=1
# minimumSize=0
# maximumSize=Integer.MAX_VALUE
# maximumSoft=true
# objectTimeout=1200 (seconds)
# userTimeout=1200 (seconds)
# skimmerFrequency=660 (seconds)
# shrinkBy=5
# logFile=System.out
# debugging=false
#
#########################################################
PoolMan.Client.logFile=clientpool.log
PoolMan.Client.initialObjects=10
PoolMan.Client.minimumSize=10
PoolMan.Client.debugging=false
PoolMan.Client.userTimeout=120

##########################################################
# PoolMan - Generic Pool Manager
#
# Server default options
#
# initialObjects=1
# minimumSize=0
# maximumSize=Integer.MAX_VALUE
# maximumSoft=true
# objectTimeout=1200 (seconds)
# userTimeout=1200 (seconds)
# skimmerFrequency=660 (seconds)
# shrinkBy=5
# logFile=System.out
# debugging=false
#
#########################################################
PoolMan.Server.initialObjects=10
PoolMan.Server.minimumSize=10
PoolMan.Server.logFile=serverpool.log
PoolMan.Server.debugging=false
PoolMan.Server.userTimeout=120


#########################################################
# Schema Validation settings.  Both settings are optional and default to true.
# For production these should be set to false since validating server 
# responses will decrease performance.   
# 
# EPP.Validating turns on schema validation.  
# EPP.FullSchemaChecking turns on very strict schema validation
# which my be process intensive.  To turn on EPP.FullSchemaChecking 
# both properties must be set to true.
#
# If running the server stub then set both properties to true to 
# have the server stub perform schema validation. This
# will show how the server responds to invalid XML.
#
#########################################################
EPP.Validating=false
EPP.FullSchemaChecking=false


##########################################################
# Session Pool Settings
#########################################################
# Factory class for creating sessions in the pool
EPP.SessionPool.poolableClassName=com.verisign.epp.pool.EPPSessionPoolableFactory

# User name used to authenticate a session.
#EPP.SessionPool.clientId=username
#EPP.SessionPool.password=password
EPP.SessionPool.clientId=iana2
# Password used to authenticate a session.
EPP.SessionPool.password=ianaRZMStest

# Maximum number of milliseconds that a session will be established.
# (Test setting to demonstrate handling of absolute timeout)
#EPP.SessionPool.absoluteTimeout=3000
# (Production recommended setting of 23 hours)
EPP.SessionPool.absoluteTimeout=82800000

# Number of milliseconds of no transactions that requires a 
# keep alive transaction to be sent.  The keep alive transaction 
# is the Hello Command.  
# (Test setting to demonstrate handling of idle timeouts)
#EPP.SessionPool.idleTimeout=1000
# (Production recommended setting of 8 minutes)
EPP.SessionPool.idleTimeout=480000

# Minimum number of idle sessions in the pool.
EPP.SessionPool.minIdle=5

# Maximum number of idle sessions in the pool.
EPP.SessionPool.maxIdle=10

# Maximum number of active sessions borrowed from the pool.
EPP.SessionPool.maxActive=10

# Maximum number of milliseconds to block waiting for a session.
EPP.SessionPool.maxWait=60000

# Frequency in milliseconds to scan idle sessions for timeouts.
EPP.SessionPool.timeBetweenEvictionRunsMillis=500


##########################################################
# System Session Pool Settings, where the "default" 
# system uses the settings defined in the "Session Pool Settings"
# section along with the remainer of the connection properties.
# Additional pools can be added by adding the system name 
# to EPP.SessionPool.systemPools and adding the pool 
# properties with the property name format "EPP.SessionPool.<system>.<param>".  
# The serverName and serverPort System Session Pool properties 
# allow the pool to connect to a different host than 
# what is defined by the default EPP.ServerName and 
# EPP.ServerPort properties.  The SSL settings are globally 
# defined.
#########################################################
# List of system session pools
#EPP.SessionPool.systemPools=default,test
EPP.SessionPool.systemPools=default


##########################################################
# Test Properties
#
# These properties are used only by the test clients for 
# dynamically configuring test variables like the 
# login client id and password to use when not 
# using a session pool, and whether or not the test 
# is running against the Stub Server.  These properties 
# can be changed to target different environments 
# like OT&E. 
##########################################################

# Login client id used to connect when NOT using a session pool
# Default: ClientX
EPP.Test.clientId=ClientX

# Login password used to connect when NOT using a session pool
# Default: password
EPP.Test.password=password

# Is the test running against the Stub Server?  Valid values 
# are non-defined, "true", or "false".  
# Certain tests will be disabled if the tests are NOT running 
# against the Stub Server.
# Default: true.
EPP.Test.stubServer=false
