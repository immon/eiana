<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="eiana" default="all">
  
  
  <property file="eiana.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="compiler.resources">
    <include name="**/?*.properties"/>
    <include name="**/?*.xml"/>
    <include name="**/?*.gif"/>
    <include name="**/?*.png"/>
    <include name="**/?*.jpeg"/>
    <include name="**/?*.jpg"/>
    <include name="**/?*.html"/>
    <include name="**/?*.dtd"/>
    <include name="**/?*.tld"/>
  </patternset>
  
  
  <!-- Project Libraries -->
  
  <path id="library.ant.classpath">
    <pathelement location="${basedir}/../lib/ant/ant.jar"/>
  </path>
  
  <path id="library.apache-commons.classpath">
    <pathelement location="${basedir}/../lib/apache-commons/commons-beanutils-bean-collections.jar"/>
    <pathelement location="${basedir}/../lib/apache-commons/commons-beanutils-core.jar"/>
    <pathelement location="${basedir}/../lib/apache-commons/commons-beanutils.jar"/>
    <pathelement location="${basedir}/../lib/apache-commons/commons-codec-1.3.jar"/>
    <pathelement location="${basedir}/../lib/apache-commons/commons-collections-2.1.1.jar"/>
    <pathelement location="${basedir}/../lib/apache-commons/commons-collections-3.1.jar"/>
    <pathelement location="${basedir}/../lib/apache-commons/commons-dbcp-1.2.1.jar"/>
    <pathelement location="${basedir}/../lib/apache-commons/commons-el.jar"/>
    <pathelement location="${basedir}/../lib/apache-commons/commons-fileupload-1.1.jar"/>
    <pathelement location="${basedir}/../lib/apache-commons/commons-io-1.2.jar"/>
    <pathelement location="${basedir}/../lib/apache-commons/commons-lang-2.1.jar"/>
    <pathelement location="${basedir}/../lib/apache-commons/commons-logging-1.0.4.jar"/>
    <pathelement location="${basedir}/../lib/apache-commons/commons-logging-api.jar"/>
    <pathelement location="${basedir}/../lib/apache-commons/commons-pool-1.3.jar"/>
    <pathelement location="${basedir}/../lib/apache-commons/commons-validator.jar"/>
  </path>
  
  <path id="library.cobertura.classpath">
    <pathelement location="${basedir}/../lib/cobertura/cobertura.jar"/>
  </path>
  
  <path id="library.dom4j.classpath">
    <pathelement location="${basedir}/../lib/dom4j/dom4j-1.6.1.jar"/>
  </path>
  
  <path id="library.hibernate.classpath">
    <pathelement location="${basedir}/../lib/hibernate/antlr-2.7.6.jar"/>
    <pathelement location="${basedir}/../lib/hibernate/asm.jar"/>
    <pathelement location="${basedir}/../lib/hibernate/cglib-2.1.3.jar"/>
    <pathelement location="${basedir}/../lib/hibernate/ehcache-1.2.3.jar"/>
    <pathelement location="${basedir}/../lib/hibernate/hibernate-annotations.jar"/>
    <pathelement location="${basedir}/../lib/hibernate/hibernate-tools.jar"/>
    <pathelement location="${basedir}/../lib/hibernate/hibernate3.jar"/>
  </path>
  
  <path id="library.jbpm.classpath">
    <pathelement location="${basedir}/../lib/jbpm/antlr-2.7.5H3.jar"/>
    <pathelement location="${basedir}/../lib/jbpm/jbpm-3.1.4.jar"/>
    <pathelement location="${basedir}/../lib/jbpm/jbpm-identity-3.1.4.jar"/>
  </path>
  
  <path id="library.jdom.classpath">
    <pathelement location="${basedir}/../lib/jdom/jdom.jar"/>
  </path>
  
  <path id="library.log4j.classpath">
    <pathelement location="${basedir}/../lib/log4j/log4j-1.2.14.jar"/>
  </path>
  
  <path id="library.mysql.classpath">
    <pathelement location="${basedir}/../lib/mysql/mysql-connector-java-5.0.4-bin.jar"/>
  </path>
  
  <path id="library.nask-commons.classpath">
    <pathelement location="${basedir}/../lib/nask-commons/dynaxml.jar"/>
    <pathelement location="${basedir}/../lib/nask-commons/util.jar"/>
  </path>
  
  <path id="library.spring.classpath">
    <pathelement location="${basedir}/../lib/spring/spring-aspects.jar"/>
    <pathelement location="${basedir}/../lib/spring/spring-mock.jar"/>
    <pathelement location="${basedir}/../lib/spring/spring-src.zip"/>
    <pathelement location="${basedir}/../lib/spring/spring.jar"/>
  </path>
  
  <path id="library.testng-5.5-jdk15.classpath">
    <pathelement location="${basedir}/../lib/testng/testng-5.5-jdk15.jar"/>
    <pathelement location="${basedir}/../lib/cobertura/cobertura.jar"/>
  </path>
  
  <path id="library.javaee.classpath">
    <pathelement location="${basedir}/../lib/javaee/javaee.jar"/>
  </path>
  
  <!-- Modules -->
  
  
  <!-- Module integration-securid -->
  
  <dirname property="module.integration-securid.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.integration-securid" value="${compiler.args}"/>
  
  <property name="integration-securid.output.dir" value="${module.integration-securid.basedir}/classes/production/integration-securid"/>
  <property name="integration-securid.testoutput.dir" value="${module.integration-securid.basedir}/classes/test/integration-securid"/>
  
  <path id="integration-securid.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="integration-securid.module.classpath"/>
  
  
  <patternset id="excluded.from.module.integration-securid">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.integration-securid">
    <patternset refid="excluded.from.module.integration-securid"/>
  </patternset>
  
  <path id="integration-securid.module.sourcepath">
    <dirset dir="${module.integration-securid.basedir}/../integration-securid">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.integration-securid" depends="compile.module.integration-securid.production,compile.module.integration-securid.tests" description="Compile module integration-securid"/>
  
  <target name="compile.module.integration-securid.production" description="Compile module integration-securid; production classes">
    <mkdir dir="${integration-securid.output.dir}"/>
    <javac destdir="${integration-securid.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.integration-securid}"/>
      <bootclasspath refid="integration-securid.module.bootclasspath"/>
      <classpath refid="integration-securid.module.classpath"/>
      <src refid="integration-securid.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.integration-securid"/>
    </javac>
    
    <copy todir="${integration-securid.output.dir}">
      <fileset dir="${module.integration-securid.basedir}/../integration-securid/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.integration-securid.tests" depends="compile.module.integration-securid.production" description="compile module integration-securid; test classes" unless="skip.tests"/>
  
  <target name="clean.module.integration-securid" description="cleanup module">
    <delete dir="${integration-securid.output.dir}"/>
    <delete dir="${integration-securid.testoutput.dir}"/>
  </target>
  
  
  <!-- Module conf -->
  
  <dirname property="module.conf.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.conf" value="${compiler.args}"/>
  
  <property name="conf.output.dir" value="${module.conf.basedir}/classes/production/conf"/>
  <property name="conf.testoutput.dir" value="${module.conf.basedir}/classes/test/conf"/>
  
  <path id="conf.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="conf.module.classpath">
    <path refid="library.testng-5.5-jdk15.classpath"/>
    <path refid="library.javaee.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.conf">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.conf">
    <patternset refid="excluded.from.module.conf"/>
  </patternset>
  
  <path id="conf.module.test.sourcepath">
    <dirset dir="${module.conf.basedir}/../conf">
      <include name="hibernate"/>
      <include name="spring"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.conf" depends="compile.module.conf.production,compile.module.conf.tests" description="Compile module conf"/>
  
  <target name="compile.module.conf.production" description="Compile module conf; production classes"/>
  
  <target name="compile.module.conf.tests" depends="compile.module.conf.production" description="compile module conf; test classes" unless="skip.tests">
    <mkdir dir="${conf.testoutput.dir}"/>
    <javac destdir="${conf.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.conf}"/>
      <classpath refid="conf.module.classpath"/>
      <classpath location="${conf.output.dir}"/>
      <src refid="conf.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.conf"/>
    </javac>
    
    <copy todir="${conf.testoutput.dir}">
      <fileset dir="${module.conf.basedir}/../conf/hibernate">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.conf.basedir}/../conf/spring">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.conf" description="cleanup module">
    <delete dir="${conf.output.dir}"/>
    <delete dir="${conf.testoutput.dir}"/>
  </target>
  
  
  <!-- Module eiana-util -->
  
  <dirname property="module.eiana-util.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.eiana-util" value="${compiler.args}"/>
  
  <property name="eiana-util.output.dir" value="${module.eiana-util.basedir}/classes/production/eiana-util"/>
  <property name="eiana-util.testoutput.dir" value="${module.eiana-util.basedir}/classes/test/eiana-util"/>
  
  <path id="eiana-util.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="eiana-util.module.classpath">
    <path refid="library.hibernate.classpath"/>
    <path refid="library.javaee.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.eiana-util">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.eiana-util">
    <patternset refid="excluded.from.module.eiana-util"/>
  </patternset>
  
  <path id="eiana-util.module.sourcepath">
    <dirset dir="${module.eiana-util.basedir}/../eiana-util">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.eiana-util" depends="compile.module.eiana-util.production,compile.module.eiana-util.tests" description="Compile module eiana-util"/>
  
  <target name="compile.module.eiana-util.production" description="Compile module eiana-util; production classes">
    <mkdir dir="${eiana-util.output.dir}"/>
    <javac destdir="${eiana-util.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.eiana-util}"/>
      <bootclasspath refid="eiana-util.module.bootclasspath"/>
      <classpath refid="eiana-util.module.classpath"/>
      <src refid="eiana-util.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.eiana-util"/>
    </javac>
    
    <copy todir="${eiana-util.output.dir}">
      <fileset dir="${module.eiana-util.basedir}/../eiana-util/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.eiana-util.tests" depends="compile.module.eiana-util.production" description="compile module eiana-util; test classes" unless="skip.tests"/>
  
  <target name="clean.module.eiana-util" description="cleanup module">
    <delete dir="${eiana-util.output.dir}"/>
    <delete dir="${eiana-util.testoutput.dir}"/>
  </target>
  
  
  <!-- Module common-objectdiff -->
  
  <dirname property="module.common-objectdiff.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.common-objectdiff" value="${compiler.args}"/>
  
  <property name="common-objectdiff.output.dir" value="${module.common-objectdiff.basedir}/classes/production/common-objectdiff"/>
  <property name="common-objectdiff.testoutput.dir" value="${module.common-objectdiff.basedir}/classes/test/common-objectdiff"/>
  
  <path id="common-objectdiff.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="common-objectdiff.module.classpath">
    <path refid="library.hibernate.classpath"/>
    <path refid="library.javaee.classpath"/>
    <path refid="library.log4j.classpath"/>
    <path refid="library.testng-5.5-jdk15.classpath"/>
    <path refid="library.spring.classpath"/>
    <path refid="library.mysql.classpath"/>
    <path refid="library.apache-commons.classpath"/>
    <path refid="library.nask-commons.classpath"/>
    <pathelement location="${eiana-util.output.dir}"/>
    <pathelement location="${eiana-util.testoutput.dir}"/>
    <path refid="library.dom4j.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.common-objectdiff">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.common-objectdiff">
    <patternset refid="excluded.from.module.common-objectdiff"/>
  </patternset>
  
  <path id="common-objectdiff.module.sourcepath">
    <dirset dir="${module.common-objectdiff.basedir}/../common-objectdiff">
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="common-objectdiff.module.test.sourcepath">
    <dirset dir="${module.common-objectdiff.basedir}/../common-objectdiff">
      <include name="test/conf"/>
      <include name="test/hibernate"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.common-objectdiff" depends="compile.module.common-objectdiff.production,compile.module.common-objectdiff.tests" description="Compile module common-objectdiff"/>
  
  <target name="compile.module.common-objectdiff.production" depends="compile.module.eiana-util" description="Compile module common-objectdiff; production classes">
    <mkdir dir="${common-objectdiff.output.dir}"/>
    <javac destdir="${common-objectdiff.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.common-objectdiff}"/>
      <bootclasspath refid="common-objectdiff.module.bootclasspath"/>
      <classpath refid="common-objectdiff.module.classpath"/>
      <src refid="common-objectdiff.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.common-objectdiff"/>
    </javac>
    
    <copy todir="${common-objectdiff.output.dir}">
      <fileset dir="${module.common-objectdiff.basedir}/../common-objectdiff/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.common-objectdiff.tests" depends="compile.module.common-objectdiff.production" description="compile module common-objectdiff; test classes" unless="skip.tests">
    <mkdir dir="${common-objectdiff.testoutput.dir}"/>
    <javac destdir="${common-objectdiff.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.common-objectdiff}"/>
      <classpath refid="common-objectdiff.module.classpath"/>
      <classpath location="${common-objectdiff.output.dir}"/>
      <src refid="common-objectdiff.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.common-objectdiff"/>
    </javac>
    
    <copy todir="${common-objectdiff.testoutput.dir}">
      <fileset dir="${module.common-objectdiff.basedir}/../common-objectdiff/test/conf">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.common-objectdiff.basedir}/../common-objectdiff/test/hibernate">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.common-objectdiff" description="cleanup module">
    <delete dir="${common-objectdiff.output.dir}"/>
    <delete dir="${common-objectdiff.testoutput.dir}"/>
  </target>
  
  
  <!-- Module eiana-notifications -->
  
  <dirname property="module.eiana-notifications.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.eiana-notifications" value="${compiler.args}"/>
  
  <property name="eiana-notifications.output.dir" value="${module.eiana-notifications.basedir}/classes/production/eiana-notifications"/>
  <property name="eiana-notifications.testoutput.dir" value="${module.eiana-notifications.basedir}/classes/test/eiana-notifications"/>
  
  <path id="eiana-notifications.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="eiana-notifications.module.classpath">
    <path refid="library.javaee.classpath"/>
    <pathelement location="${eiana-util.output.dir}"/>
    <pathelement location="${eiana-util.testoutput.dir}"/>
    <path refid="library.log4j.classpath"/>
    <path refid="library.jdom.classpath"/>
    <path refid="library.testng-5.5-jdk15.classpath"/>
    <path refid="library.hibernate.classpath"/>
    <path refid="library.spring.classpath"/>
    <path refid="library.nask-commons.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.eiana-notifications">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.eiana-notifications">
    <patternset refid="excluded.from.module.eiana-notifications"/>
  </patternset>
  
  <path id="eiana-notifications.module.sourcepath">
    <dirset dir="${module.eiana-notifications.basedir}/../eiana-notifications">
      <include name="etc"/>
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="eiana-notifications.module.test.sourcepath">
    <dirset dir="${module.eiana-notifications.basedir}/../eiana-notifications">
      <include name="test/accuracy"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.eiana-notifications" depends="compile.module.eiana-notifications.production,compile.module.eiana-notifications.tests" description="Compile module eiana-notifications"/>
  
  <target name="compile.module.eiana-notifications.production" depends="compile.module.eiana-util" description="Compile module eiana-notifications; production classes">
    <mkdir dir="${eiana-notifications.output.dir}"/>
    <javac destdir="${eiana-notifications.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.eiana-notifications}"/>
      <bootclasspath refid="eiana-notifications.module.bootclasspath"/>
      <classpath refid="eiana-notifications.module.classpath"/>
      <src refid="eiana-notifications.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.eiana-notifications"/>
    </javac>
    
    <copy todir="${eiana-notifications.output.dir}">
      <fileset dir="${module.eiana-notifications.basedir}/../eiana-notifications/etc">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.eiana-notifications.basedir}/../eiana-notifications/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.eiana-notifications.tests" depends="compile.module.eiana-notifications.production" description="compile module eiana-notifications; test classes" unless="skip.tests">
    <mkdir dir="${eiana-notifications.testoutput.dir}"/>
    <javac destdir="${eiana-notifications.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.eiana-notifications}"/>
      <classpath refid="eiana-notifications.module.classpath"/>
      <classpath location="${eiana-notifications.output.dir}"/>
      <src refid="eiana-notifications.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.eiana-notifications"/>
    </javac>
    
    <copy todir="${eiana-notifications.testoutput.dir}">
      <fileset dir="${module.eiana-notifications.basedir}/../eiana-notifications/test/accuracy">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.eiana-notifications" description="cleanup module">
    <delete dir="${eiana-notifications.output.dir}"/>
    <delete dir="${eiana-notifications.testoutput.dir}"/>
  </target>
  
  
  <!-- Module eiana-domains -->
  
  <dirname property="module.eiana-domains.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.eiana-domains" value="${compiler.args}"/>
  
  <property name="eiana-domains.output.dir" value="${module.eiana-domains.basedir}/classes/production/eiana-domains"/>
  <property name="eiana-domains.testoutput.dir" value="${module.eiana-domains.basedir}/classes/test/eiana-domains"/>
  
  <path id="eiana-domains.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="eiana-domains.module.classpath">
    <pathelement location="${eiana-util.output.dir}"/>
    <pathelement location="${eiana-util.testoutput.dir}"/>
    <path refid="library.javaee.classpath"/>
    <path refid="library.hibernate.classpath"/>
    <path refid="library.log4j.classpath"/>
    <path refid="library.spring.classpath"/>
    <path refid="library.apache-commons.classpath"/>
    <path refid="library.testng-5.5-jdk15.classpath"/>
    <path refid="library.dom4j.classpath"/>
    <path refid="library.mysql.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.eiana-domains">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.eiana-domains">
    <patternset refid="excluded.from.module.eiana-domains"/>
  </patternset>
  
  <path id="eiana-domains.module.sourcepath">
    <dirset dir="${module.eiana-domains.basedir}/../eiana-domains">
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="eiana-domains.module.test.sourcepath">
    <dirset dir="${module.eiana-domains.basedir}/../eiana-domains">
      <include name="test/conf"/>
      <include name="test/dao"/>
      <include name="test/hibernate"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.eiana-domains" depends="compile.module.eiana-domains.production,compile.module.eiana-domains.tests" description="Compile module eiana-domains"/>
  
  <target name="compile.module.eiana-domains.production" depends="compile.module.eiana-util" description="Compile module eiana-domains; production classes">
    <mkdir dir="${eiana-domains.output.dir}"/>
    <javac destdir="${eiana-domains.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.eiana-domains}"/>
      <bootclasspath refid="eiana-domains.module.bootclasspath"/>
      <classpath refid="eiana-domains.module.classpath"/>
      <src refid="eiana-domains.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.eiana-domains"/>
    </javac>
    
    <copy todir="${eiana-domains.output.dir}">
      <fileset dir="${module.eiana-domains.basedir}/../eiana-domains/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.eiana-domains.tests" depends="compile.module.eiana-domains.production" description="compile module eiana-domains; test classes" unless="skip.tests">
    <mkdir dir="${eiana-domains.testoutput.dir}"/>
    <javac destdir="${eiana-domains.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.eiana-domains}"/>
      <classpath refid="eiana-domains.module.classpath"/>
      <classpath location="${eiana-domains.output.dir}"/>
      <src refid="eiana-domains.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.eiana-domains"/>
    </javac>
    
    <copy todir="${eiana-domains.testoutput.dir}">
      <fileset dir="${module.eiana-domains.basedir}/../eiana-domains/test/conf">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.eiana-domains.basedir}/../eiana-domains/test/dao">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.eiana-domains.basedir}/../eiana-domains/test/hibernate">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.eiana-domains" description="cleanup module">
    <delete dir="${eiana-domains.output.dir}"/>
    <delete dir="${eiana-domains.testoutput.dir}"/>
  </target>
  
  
  <!-- Module eiana-users -->
  
  <dirname property="module.eiana-users.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.eiana-users" value="${compiler.args}"/>
  
  <property name="eiana-users.output.dir" value="${module.eiana-users.basedir}/classes/production/eiana-users"/>
  <property name="eiana-users.testoutput.dir" value="${module.eiana-users.basedir}/classes/test/eiana-users"/>
  
  <path id="eiana-users.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="eiana-users.module.classpath">
    <pathelement location="${eiana-util.output.dir}"/>
    <pathelement location="${eiana-util.testoutput.dir}"/>
    <path refid="library.javaee.classpath"/>
    <path refid="library.hibernate.classpath"/>
    <path refid="library.log4j.classpath"/>
    <path refid="library.spring.classpath"/>
    <path refid="library.apache-commons.classpath"/>
    <path refid="library.testng-5.5-jdk15.classpath"/>
    <path refid="library.dom4j.classpath"/>
    <path refid="library.mysql.classpath"/>
    <pathelement location="${eiana-notifications.output.dir}"/>
    <pathelement location="${eiana-notifications.testoutput.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.eiana-users">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.eiana-users">
    <patternset refid="excluded.from.module.eiana-users"/>
  </patternset>
  
  <path id="eiana-users.module.sourcepath">
    <dirset dir="${module.eiana-users.basedir}/../eiana-users">
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="eiana-users.module.test.sourcepath">
    <dirset dir="${module.eiana-users.basedir}/../eiana-users">
      <include name="test/conf"/>
      <include name="test/dao"/>
      <include name="test/hibernate"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.eiana-users" depends="compile.module.eiana-users.production,compile.module.eiana-users.tests" description="Compile module eiana-users"/>
  
  <target name="compile.module.eiana-users.production" depends="compile.module.eiana-util,compile.module.eiana-notifications" description="Compile module eiana-users; production classes">
    <mkdir dir="${eiana-users.output.dir}"/>
    <javac destdir="${eiana-users.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.eiana-users}"/>
      <bootclasspath refid="eiana-users.module.bootclasspath"/>
      <classpath refid="eiana-users.module.classpath"/>
      <src refid="eiana-users.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.eiana-users"/>
    </javac>
    
    <copy todir="${eiana-users.output.dir}">
      <fileset dir="${module.eiana-users.basedir}/../eiana-users/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.eiana-users.tests" depends="compile.module.eiana-users.production" description="compile module eiana-users; test classes" unless="skip.tests">
    <mkdir dir="${eiana-users.testoutput.dir}"/>
    <javac destdir="${eiana-users.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.eiana-users}"/>
      <classpath refid="eiana-users.module.classpath"/>
      <classpath location="${eiana-users.output.dir}"/>
      <src refid="eiana-users.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.eiana-users"/>
    </javac>
    
    <copy todir="${eiana-users.testoutput.dir}">
      <fileset dir="${module.eiana-users.basedir}/../eiana-users/test/conf">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.eiana-users.basedir}/../eiana-users/test/dao">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.eiana-users.basedir}/../eiana-users/test/hibernate">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.eiana-users" description="cleanup module">
    <delete dir="${eiana-users.output.dir}"/>
    <delete dir="${eiana-users.testoutput.dir}"/>
  </target>
  
  
  <!-- Module facade-common -->
  
  <dirname property="module.facade-common.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.facade-common" value="${compiler.args}"/>
  
  <property name="facade-common.output.dir" value="${module.facade-common.basedir}/classes/production/facade-common"/>
  <property name="facade-common.testoutput.dir" value="${module.facade-common.basedir}/classes/test/facade-common"/>
  
  <path id="facade-common.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="facade-common.module.classpath">
    <path refid="library.jbpm.classpath"/>
    <pathelement location="${eiana-users.output.dir}"/>
    <pathelement location="${eiana-users.testoutput.dir}"/>
    <pathelement location="${eiana-util.output.dir}"/>
    <pathelement location="${eiana-util.testoutput.dir}"/>
    <path refid="library.log4j.classpath"/>
    <path refid="library.testng-5.5-jdk15.classpath"/>
    <path refid="library.spring.classpath"/>
    <pathelement location="${integration-securid.output.dir}"/>
    <pathelement location="${integration-securid.testoutput.dir}"/>
    <path refid="library.javaee.classpath"/>
    <pathelement location="${eiana-notifications.output.dir}"/>
    <pathelement location="${eiana-notifications.testoutput.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.facade-common">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.facade-common">
    <patternset refid="excluded.from.module.facade-common"/>
  </patternset>
  
  <path id="facade-common.module.sourcepath">
    <dirset dir="${module.facade-common.basedir}/../facade-common">
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="facade-common.module.test.sourcepath">
    <dirset dir="${module.facade-common.basedir}/../facade-common">
      <include name="test"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.facade-common" depends="compile.module.facade-common.production,compile.module.facade-common.tests" description="Compile module facade-common"/>
  
  <target name="compile.module.facade-common.production" depends="compile.module.eiana-users,compile.module.eiana-util,compile.module.integration-securid,compile.module.eiana-notifications" description="Compile module facade-common; production classes">
    <mkdir dir="${facade-common.output.dir}"/>
    <javac destdir="${facade-common.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.facade-common}"/>
      <bootclasspath refid="facade-common.module.bootclasspath"/>
      <classpath refid="facade-common.module.classpath"/>
      <src refid="facade-common.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.facade-common"/>
    </javac>
    
    <copy todir="${facade-common.output.dir}">
      <fileset dir="${module.facade-common.basedir}/../facade-common/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.facade-common.tests" depends="compile.module.facade-common.production" description="compile module facade-common; test classes" unless="skip.tests">
    <mkdir dir="${facade-common.testoutput.dir}"/>
    <javac destdir="${facade-common.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.facade-common}"/>
      <classpath refid="facade-common.module.classpath"/>
      <classpath location="${facade-common.output.dir}"/>
      <src refid="facade-common.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.facade-common"/>
    </javac>
    
    <copy todir="${facade-common.testoutput.dir}">
      <fileset dir="${module.facade-common.basedir}/../facade-common/test">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.facade-common" description="cleanup module">
    <delete dir="${facade-common.output.dir}"/>
    <delete dir="${facade-common.testoutput.dir}"/>
  </target>
  
  
  <!-- Module eiana-init -->
  
  <dirname property="module.eiana-init.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.eiana-init" value="${compiler.args}"/>
  
  <property name="eiana-init.output.dir" value="${module.eiana-init.basedir}/classes/production/eiana-init"/>
  <property name="eiana-init.testoutput.dir" value="${module.eiana-init.basedir}/classes/test/eiana-init"/>
  
  <path id="eiana-init.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="eiana-init.module.classpath">
    <path refid="library.ant.classpath"/>
    <path refid="library.hibernate.classpath"/>
    <pathelement location="${eiana-domains.output.dir}"/>
    <pathelement location="${eiana-domains.testoutput.dir}"/>
    <pathelement location="${eiana-users.output.dir}"/>
    <pathelement location="${eiana-users.testoutput.dir}"/>
    <path refid="library.javaee.classpath"/>
    <pathelement location="${eiana-notifications.output.dir}"/>
    <pathelement location="${eiana-notifications.testoutput.dir}"/>
    <pathelement location="${eiana-util.output.dir}"/>
    <pathelement location="${eiana-util.testoutput.dir}"/>
    <path refid="library.cobertura.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.eiana-init">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.eiana-init">
    <patternset refid="excluded.from.module.eiana-init"/>
  </patternset>
  
  <path id="eiana-init.module.sourcepath">
    <dirset dir="${module.eiana-init.basedir}/../eiana-init">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.eiana-init" depends="compile.module.eiana-init.production,compile.module.eiana-init.tests" description="Compile module eiana-init"/>
  
  <target name="compile.module.eiana-init.production" depends="compile.module.eiana-domains,compile.module.eiana-users,compile.module.eiana-notifications,compile.module.eiana-util" description="Compile module eiana-init; production classes">
    <mkdir dir="${eiana-init.output.dir}"/>
    <javac destdir="${eiana-init.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.eiana-init}"/>
      <bootclasspath refid="eiana-init.module.bootclasspath"/>
      <classpath refid="eiana-init.module.classpath"/>
      <src refid="eiana-init.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.eiana-init"/>
    </javac>
    
    <copy todir="${eiana-init.output.dir}">
      <fileset dir="${module.eiana-init.basedir}/../eiana-init/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.eiana-init.tests" depends="compile.module.eiana-init.production" description="compile module eiana-init; test classes" unless="skip.tests"/>
  
  <target name="clean.module.eiana-init" description="cleanup module">
    <delete dir="${eiana-init.output.dir}"/>
    <delete dir="${eiana-init.testoutput.dir}"/>
  </target>
  
  
  <!-- Module lib -->
  
  <dirname property="module.lib.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.lib" value="${compiler.args}"/>
  
  <property name="lib.output.dir" value="${module.lib.basedir}/classes/production/lib"/>
  <property name="lib.testoutput.dir" value="${module.lib.basedir}/classes/test/lib"/>
  
  <path id="lib.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="lib.module.classpath"/>
  
  
  <patternset id="excluded.from.module.lib">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.lib">
    <patternset refid="excluded.from.module.lib"/>
  </patternset>
  
  
  <target name="compile.module.lib" depends="compile.module.lib.production,compile.module.lib.tests" description="Compile module lib"/>
  
  <target name="compile.module.lib.production" description="Compile module lib; production classes"/>
  
  <target name="compile.module.lib.tests" depends="compile.module.lib.production" description="compile module lib; test classes" unless="skip.tests"/>
  
  <target name="clean.module.lib" description="cleanup module">
    <delete dir="${lib.output.dir}"/>
    <delete dir="${lib.testoutput.dir}"/>
  </target>
  
  
  <!-- Module eiana-dns -->
  
  <dirname property="module.eiana-dns.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.eiana-dns" value="${compiler.args}"/>
  
  <property name="eiana-dns.output.dir" value="${module.eiana-dns.basedir}/classes/production/eiana-dns"/>
  <property name="eiana-dns.testoutput.dir" value="${module.eiana-dns.basedir}/classes/test/eiana-dns"/>
  
  <path id="eiana-dns.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="eiana-dns.module.classpath"/>
  
  
  <patternset id="excluded.from.module.eiana-dns">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.eiana-dns">
    <patternset refid="excluded.from.module.eiana-dns"/>
  </patternset>
  
  <path id="eiana-dns.module.sourcepath">
    <dirset dir="${module.eiana-dns.basedir}/../eiana-dns">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.eiana-dns" depends="compile.module.eiana-dns.production,compile.module.eiana-dns.tests" description="Compile module eiana-dns"/>
  
  <target name="compile.module.eiana-dns.production" description="Compile module eiana-dns; production classes">
    <mkdir dir="${eiana-dns.output.dir}"/>
    <javac destdir="${eiana-dns.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.eiana-dns}"/>
      <bootclasspath refid="eiana-dns.module.bootclasspath"/>
      <classpath refid="eiana-dns.module.classpath"/>
      <src refid="eiana-dns.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.eiana-dns"/>
    </javac>
    
    <copy todir="${eiana-dns.output.dir}">
      <fileset dir="${module.eiana-dns.basedir}/../eiana-dns/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.eiana-dns.tests" depends="compile.module.eiana-dns.production" description="compile module eiana-dns; test classes" unless="skip.tests"/>
  
  <target name="clean.module.eiana-dns" description="cleanup module">
    <delete dir="${eiana-dns.output.dir}"/>
    <delete dir="${eiana-dns.testoutput.dir}"/>
  </target>
  
  
  <!-- Module eiana-logs -->
  
  <dirname property="module.eiana-logs.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.eiana-logs" value="${compiler.args}"/>
  
  <property name="eiana-logs.output.dir" value="${module.eiana-logs.basedir}/classes/production/eiana-logs"/>
  <property name="eiana-logs.testoutput.dir" value="${module.eiana-logs.basedir}/classes/test/eiana-logs"/>
  
  <path id="eiana-logs.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="eiana-logs.module.classpath">
    <path refid="library.javaee.classpath"/>
    <path refid="library.cobertura.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.eiana-logs">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.eiana-logs">
    <patternset refid="excluded.from.module.eiana-logs"/>
  </patternset>
  
  <path id="eiana-logs.module.sourcepath">
    <dirset dir="${module.eiana-logs.basedir}/../eiana-logs">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.eiana-logs" depends="compile.module.eiana-logs.production,compile.module.eiana-logs.tests" description="Compile module eiana-logs"/>
  
  <target name="compile.module.eiana-logs.production" description="Compile module eiana-logs; production classes">
    <mkdir dir="${eiana-logs.output.dir}"/>
    <javac destdir="${eiana-logs.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.eiana-logs}"/>
      <bootclasspath refid="eiana-logs.module.bootclasspath"/>
      <classpath refid="eiana-logs.module.classpath"/>
      <src refid="eiana-logs.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.eiana-logs"/>
    </javac>
    
    <copy todir="${eiana-logs.output.dir}">
      <fileset dir="${module.eiana-logs.basedir}/../eiana-logs/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.eiana-logs.tests" depends="compile.module.eiana-logs.production" description="compile module eiana-logs; test classes" unless="skip.tests"/>
  
  <target name="clean.module.eiana-logs" description="cleanup module">
    <delete dir="${eiana-logs.output.dir}"/>
    <delete dir="${eiana-logs.testoutput.dir}"/>
  </target>
  
  
  <!-- Module integration-rt -->
  
  <dirname property="module.integration-rt.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.integration-rt" value="${compiler.args}"/>
  
  <property name="integration-rt.output.dir" value="${module.integration-rt.basedir}/classes/production/integration-rt"/>
  <property name="integration-rt.testoutput.dir" value="${module.integration-rt.basedir}/classes/test/integration-rt"/>
  
  <path id="integration-rt.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="integration-rt.module.classpath"/>
  
  
  <patternset id="excluded.from.module.integration-rt">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.integration-rt">
    <patternset refid="excluded.from.module.integration-rt"/>
  </patternset>
  
  <path id="integration-rt.module.sourcepath">
    <dirset dir="${module.integration-rt.basedir}/../integration-rt">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.integration-rt" depends="compile.module.integration-rt.production,compile.module.integration-rt.tests" description="Compile module integration-rt"/>
  
  <target name="compile.module.integration-rt.production" description="Compile module integration-rt; production classes">
    <mkdir dir="${integration-rt.output.dir}"/>
    <javac destdir="${integration-rt.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.integration-rt}"/>
      <bootclasspath refid="integration-rt.module.bootclasspath"/>
      <classpath refid="integration-rt.module.classpath"/>
      <src refid="integration-rt.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.integration-rt"/>
    </javac>
    
    <copy todir="${integration-rt.output.dir}">
      <fileset dir="${module.integration-rt.basedir}/../integration-rt/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.integration-rt.tests" depends="compile.module.integration-rt.production" description="compile module integration-rt; test classes" unless="skip.tests"/>
  
  <target name="clean.module.integration-rt" description="cleanup module">
    <delete dir="${integration-rt.output.dir}"/>
    <delete dir="${integration-rt.testoutput.dir}"/>
  </target>
  
  
  <!-- Module eiana-trans -->
  
  <dirname property="module.eiana-trans.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.eiana-trans" value="${compiler.args}"/>
  
  <property name="eiana-trans.output.dir" value="${module.eiana-trans.basedir}/classes/production/eiana-trans"/>
  <property name="eiana-trans.testoutput.dir" value="${module.eiana-trans.basedir}/classes/test/eiana-trans"/>
  
  <path id="eiana-trans.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="eiana-trans.module.classpath">
    <pathelement location="${eiana-domains.output.dir}"/>
    <pathelement location="${eiana-domains.testoutput.dir}"/>
    <pathelement location="${eiana-util.output.dir}"/>
    <pathelement location="${eiana-util.testoutput.dir}"/>
    <path refid="library.jbpm.classpath"/>
    <path refid="library.javaee.classpath"/>
    <path refid="library.hibernate.classpath"/>
    <path refid="library.spring.classpath"/>
    <path refid="library.testng-5.5-jdk15.classpath"/>
    <pathelement location="${module.eiana-trans.basedir}/../lib/jbpm/jbpm-identity-3.1.4.jar"/>
    <pathelement location="${integration-rt.output.dir}"/>
    <pathelement location="${integration-rt.testoutput.dir}"/>
    <pathelement location="${module.eiana-trans.basedir}/../lib/spring-modules/spring-modules-jbpm31.jar"/>
    <path refid="library.apache-commons.classpath"/>
    <pathelement location="${eiana-users.output.dir}"/>
    <pathelement location="${eiana-users.testoutput.dir}"/>
    <pathelement location="${eiana-notifications.output.dir}"/>
    <pathelement location="${eiana-notifications.testoutput.dir}"/>
    <path refid="library.nask-commons.classpath"/>
    <pathelement location="${common-objectdiff.output.dir}"/>
    <pathelement location="${common-objectdiff.testoutput.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.eiana-trans">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.eiana-trans">
    <patternset refid="excluded.from.module.eiana-trans"/>
  </patternset>
  
  <path id="eiana-trans.module.sourcepath">
    <dirset dir="${module.eiana-trans.basedir}/../eiana-trans">
      <include name="etc/processes"/>
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="eiana-trans.module.test.sourcepath">
    <dirset dir="${module.eiana-trans.basedir}/../eiana-trans">
      <include name="test/change"/>
      <include name="test/conf"/>
      <include name="test/confirmation"/>
      <include name="test/dao"/>
      <include name="test/hibernate"/>
      <include name="test/jbpm"/>
      <include name="test/manager"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.eiana-trans" depends="compile.module.eiana-trans.production,compile.module.eiana-trans.tests" description="Compile module eiana-trans"/>
  
  <target name="compile.module.eiana-trans.production" depends="compile.module.eiana-domains,compile.module.eiana-util,compile.module.integration-rt,compile.module.eiana-users,compile.module.eiana-notifications,compile.module.common-objectdiff" description="Compile module eiana-trans; production classes">
    <mkdir dir="${eiana-trans.output.dir}"/>
    <javac destdir="${eiana-trans.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.eiana-trans}"/>
      <bootclasspath refid="eiana-trans.module.bootclasspath"/>
      <classpath refid="eiana-trans.module.classpath"/>
      <src refid="eiana-trans.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.eiana-trans"/>
    </javac>
    
    <copy todir="${eiana-trans.output.dir}">
      <fileset dir="${module.eiana-trans.basedir}/../eiana-trans/etc/processes">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.eiana-trans.basedir}/../eiana-trans/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.eiana-trans.tests" depends="compile.module.eiana-trans.production" description="compile module eiana-trans; test classes" unless="skip.tests">
    <mkdir dir="${eiana-trans.testoutput.dir}"/>
    <javac destdir="${eiana-trans.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.eiana-trans}"/>
      <classpath refid="eiana-trans.module.classpath"/>
      <classpath location="${eiana-trans.output.dir}"/>
      <src refid="eiana-trans.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.eiana-trans"/>
    </javac>
    
    <copy todir="${eiana-trans.testoutput.dir}">
      <fileset dir="${module.eiana-trans.basedir}/../eiana-trans/test/change">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.eiana-trans.basedir}/../eiana-trans/test/conf">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.eiana-trans.basedir}/../eiana-trans/test/confirmation">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.eiana-trans.basedir}/../eiana-trans/test/dao">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.eiana-trans.basedir}/../eiana-trans/test/hibernate">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.eiana-trans.basedir}/../eiana-trans/test/jbpm">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.eiana-trans.basedir}/../eiana-trans/test/manager">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.eiana-trans" description="cleanup module">
    <delete dir="${eiana-trans.output.dir}"/>
    <delete dir="${eiana-trans.testoutput.dir}"/>
  </target>
  
  
  <!-- Module facade-system -->
  
  <dirname property="module.facade-system.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.facade-system" value="${compiler.args}"/>
  
  <property name="facade-system.output.dir" value="${module.facade-system.basedir}/classes/production/facade-system"/>
  <property name="facade-system.testoutput.dir" value="${module.facade-system.basedir}/classes/test/facade-system"/>
  
  <path id="facade-system.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="facade-system.module.classpath">
    <pathelement location="${eiana-util.output.dir}"/>
    <pathelement location="${eiana-util.testoutput.dir}"/>
    <pathelement location="${facade-common.output.dir}"/>
    <pathelement location="${facade-common.testoutput.dir}"/>
    <pathelement location="${eiana-domains.output.dir}"/>
    <pathelement location="${eiana-domains.testoutput.dir}"/>
    <path refid="library.testng-5.5-jdk15.classpath"/>
    <path refid="library.spring.classpath"/>
    <pathelement location="${eiana-users.output.dir}"/>
    <pathelement location="${eiana-users.testoutput.dir}"/>
    <path refid="library.javaee.classpath"/>
    <pathelement location="${eiana-trans.output.dir}"/>
    <pathelement location="${eiana-trans.testoutput.dir}"/>
    <pathelement location="${eiana-notifications.output.dir}"/>
    <pathelement location="${eiana-notifications.testoutput.dir}"/>
    <path refid="library.jbpm.classpath"/>
    <path refid="library.hibernate.classpath"/>
    <pathelement location="${common-objectdiff.output.dir}"/>
    <pathelement location="${common-objectdiff.testoutput.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.facade-system">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.facade-system">
    <patternset refid="excluded.from.module.facade-system"/>
  </patternset>
  
  <path id="facade-system.module.sourcepath">
    <dirset dir="${module.facade-system.basedir}/../facade-system">
      <include name="src"/>
    </dirset>
  </path>
  
  <path id="facade-system.module.test.sourcepath">
    <dirset dir="${module.facade-system.basedir}/../facade-system">
      <include name="test/bean"/>
      <include name="test/conf"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.facade-system" depends="compile.module.facade-system.production,compile.module.facade-system.tests" description="Compile module facade-system"/>
  
  <target name="compile.module.facade-system.production" depends="compile.module.eiana-util,compile.module.facade-common,compile.module.eiana-domains,compile.module.eiana-users,compile.module.eiana-trans,compile.module.eiana-notifications,compile.module.common-objectdiff" description="Compile module facade-system; production classes">
    <mkdir dir="${facade-system.output.dir}"/>
    <javac destdir="${facade-system.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.facade-system}"/>
      <bootclasspath refid="facade-system.module.bootclasspath"/>
      <classpath refid="facade-system.module.classpath"/>
      <src refid="facade-system.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.facade-system"/>
    </javac>
    
    <copy todir="${facade-system.output.dir}">
      <fileset dir="${module.facade-system.basedir}/../facade-system/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.facade-system.tests" depends="compile.module.facade-system.production" description="compile module facade-system; test classes" unless="skip.tests">
    <mkdir dir="${facade-system.testoutput.dir}"/>
    <javac destdir="${facade-system.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.facade-system}"/>
      <classpath refid="facade-system.module.classpath"/>
      <classpath location="${facade-system.output.dir}"/>
      <src refid="facade-system.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.facade-system"/>
    </javac>
    
    <copy todir="${facade-system.testoutput.dir}">
      <fileset dir="${module.facade-system.basedir}/../facade-system/test/bean">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.facade-system.basedir}/../facade-system/test/conf">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.facade-system" description="cleanup module">
    <delete dir="${facade-system.output.dir}"/>
    <delete dir="${facade-system.testoutput.dir}"/>
  </target>
  
  
  <!-- Module facade-admin -->
  
  <dirname property="module.facade-admin.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.facade-admin" value="${compiler.args}"/>
  
  <property name="facade-admin.output.dir" value="${module.facade-admin.basedir}/classes/production/facade-admin"/>
  <property name="facade-admin.testoutput.dir" value="${module.facade-admin.basedir}/classes/test/facade-admin"/>
  
  <path id="facade-admin.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="facade-admin.module.classpath">
    <pathelement location="${facade-common.output.dir}"/>
    <pathelement location="${facade-common.testoutput.dir}"/>
    <path refid="library.javaee.classpath"/>
    <path refid="library.nask-commons.classpath"/>
    <pathelement location="${facade-system.output.dir}"/>
    <pathelement location="${facade-system.testoutput.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.facade-admin">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.facade-admin">
    <patternset refid="excluded.from.module.facade-admin"/>
  </patternset>
  
  <path id="facade-admin.module.sourcepath">
    <dirset dir="${module.facade-admin.basedir}/../facade-admin">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.facade-admin" depends="compile.module.facade-admin.production,compile.module.facade-admin.tests" description="Compile module facade-admin"/>
  
  <target name="compile.module.facade-admin.production" depends="compile.module.facade-common,compile.module.facade-system" description="Compile module facade-admin; production classes">
    <mkdir dir="${facade-admin.output.dir}"/>
    <javac destdir="${facade-admin.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.facade-admin}"/>
      <bootclasspath refid="facade-admin.module.bootclasspath"/>
      <classpath refid="facade-admin.module.classpath"/>
      <src refid="facade-admin.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.facade-admin"/>
    </javac>
    
    <copy todir="${facade-admin.output.dir}">
      <fileset dir="${module.facade-admin.basedir}/../facade-admin/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.facade-admin.tests" depends="compile.module.facade-admin.production" description="compile module facade-admin; test classes" unless="skip.tests"/>
  
  <target name="clean.module.facade-admin" description="cleanup module">
    <delete dir="${facade-admin.output.dir}"/>
    <delete dir="${facade-admin.testoutput.dir}"/>
  </target>
  
  
  <!-- Module tests -->
  
  <dirname property="module.tests.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.tests" value="${compiler.args}"/>
  
  <property name="tests.output.dir" value="${module.tests.basedir}/classes/production/tests"/>
  <property name="tests.testoutput.dir" value="${module.tests.basedir}/classes/test/tests"/>
  
  <path id="tests.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="tests.module.classpath">
    <path refid="library.testng-5.5-jdk15.classpath"/>
    <path refid="library.spring.classpath"/>
    <path refid="library.hibernate.classpath"/>
    <path refid="library.apache-commons.classpath"/>
    <path refid="library.javaee.classpath"/>
    <path refid="library.mysql.classpath"/>
    <pathelement location="${eiana-dns.output.dir}"/>
    <pathelement location="${eiana-dns.testoutput.dir}"/>
    <pathelement location="${eiana-domains.output.dir}"/>
    <pathelement location="${eiana-domains.testoutput.dir}"/>
    <pathelement location="${eiana-logs.output.dir}"/>
    <pathelement location="${eiana-logs.testoutput.dir}"/>
    <pathelement location="${eiana-notifications.output.dir}"/>
    <pathelement location="${eiana-notifications.testoutput.dir}"/>
    <pathelement location="${eiana-trans.output.dir}"/>
    <pathelement location="${eiana-trans.testoutput.dir}"/>
    <pathelement location="${eiana-users.output.dir}"/>
    <pathelement location="${eiana-users.testoutput.dir}"/>
    <pathelement location="${eiana-util.output.dir}"/>
    <pathelement location="${eiana-util.testoutput.dir}"/>
    <pathelement location="${facade-admin.output.dir}"/>
    <pathelement location="${facade-admin.testoutput.dir}"/>
    <pathelement location="${facade-common.output.dir}"/>
    <pathelement location="${facade-common.testoutput.dir}"/>
    <pathelement location="${facade-system.output.dir}"/>
    <pathelement location="${facade-system.testoutput.dir}"/>
    <pathelement location="${integration-rt.output.dir}"/>
    <pathelement location="${integration-rt.testoutput.dir}"/>
    <pathelement location="${integration-securid.output.dir}"/>
    <pathelement location="${integration-securid.testoutput.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.tests">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.tests">
    <patternset refid="excluded.from.module.tests"/>
  </patternset>
  
  <path id="tests.module.test.sourcepath">
    <dirset dir="${module.tests.basedir}/../tests">
      <include name="hibernate"/>
      <include name="test"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.tests" depends="compile.module.tests.production,compile.module.tests.tests" description="Compile module tests"/>
  
  <target name="compile.module.tests.production" depends="compile.module.eiana-dns,compile.module.eiana-domains,compile.module.eiana-logs,compile.module.eiana-notifications,compile.module.eiana-trans,compile.module.eiana-users,compile.module.eiana-util,compile.module.facade-admin,compile.module.facade-common,compile.module.facade-system,compile.module.integration-rt,compile.module.integration-securid" description="Compile module tests; production classes"/>
  
  <target name="compile.module.tests.tests" depends="compile.module.tests.production" description="compile module tests; test classes" unless="skip.tests">
    <mkdir dir="${tests.testoutput.dir}"/>
    <javac destdir="${tests.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.tests}"/>
      <classpath refid="tests.module.classpath"/>
      <classpath location="${tests.output.dir}"/>
      <src refid="tests.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.tests"/>
    </javac>
    
    <copy todir="${tests.testoutput.dir}">
      <fileset dir="${module.tests.basedir}/../tests/hibernate">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.tests.basedir}/../tests/test">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.tests" description="cleanup module">
    <delete dir="${tests.output.dir}"/>
    <delete dir="${tests.testoutput.dir}"/>
  </target>
  
  
  <!-- Module build -->
  
  <dirname property="module.build.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.build" value="${compiler.args}"/>
  
  <property name="build.output.dir" value="${module.build.basedir}/classes/production/build"/>
  <property name="build.testoutput.dir" value="${module.build.basedir}/classes/test/build"/>
  
  <path id="build.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="build.module.classpath"/>
  
  
  <patternset id="excluded.from.module.build">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.build">
    <patternset refid="excluded.from.module.build"/>
  </patternset>
  
  
  <target name="compile.module.build" depends="compile.module.build.production,compile.module.build.tests" description="Compile module build"/>
  
  <target name="compile.module.build.production" description="Compile module build; production classes"/>
  
  <target name="compile.module.build.tests" depends="compile.module.build.production" description="compile module build; test classes" unless="skip.tests"/>
  
  <target name="clean.module.build" description="cleanup module">
    <delete dir="${build.output.dir}"/>
    <delete dir="${build.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.integration-securid, clean.module.conf, clean.module.eiana-util, clean.module.common-objectdiff, clean.module.eiana-notifications, clean.module.eiana-domains, clean.module.eiana-users, clean.module.facade-common, clean.module.eiana-init, clean.module.lib, clean.module.eiana-dns, clean.module.eiana-logs, clean.module.integration-rt, clean.module.eiana-trans, clean.module.facade-system, clean.module.facade-admin, clean.module.tests, clean.module.build" description="cleanup all"/>
  
  <target name="all" depends="init, clean, compile.module.integration-securid, compile.module.conf, compile.module.eiana-util, compile.module.common-objectdiff, compile.module.eiana-notifications, compile.module.eiana-domains, compile.module.eiana-users, compile.module.facade-common, compile.module.eiana-init, compile.module.lib, compile.module.eiana-dns, compile.module.eiana-logs, compile.module.integration-rt, compile.module.eiana-trans, compile.module.facade-system, compile.module.facade-admin, compile.module.tests, compile.module.build" description="build all"/>
</project>